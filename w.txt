import tkinter as tk
from tkinter import ttk

class Window:
    def __init__(self, master, title="Window"):
        self.master = master
        self.frame = tk.Toplevel(master)
        self.frame.title(title)
        self.frame.geometry("400x300")
        
        # 窗口装饰
        self.titlebar = tk.Frame(self.frame, height=20, bg="silver")
        self.titlebar.pack(fill="x")
        self.title_label = tk.Label(self.titlebar, text=title, bg="silver")
        self.title_label.pack(side="left")
        
        # 窗口控件
        self.content = tk.Frame(self.frame)
        self.content.pack(fill="both", expand=True)
        
        # 窗口拖动事件
        self.titlebar.bind("<Button-1>", self.start_drag)
        self.titlebar.bind("<B1-Motion>", self.do_drag)
        
    def start_drag(self, event):
        self._drag_x = event.x
        self._drag_y = event.y
        
    def do_drag(self, event):
        x = self.frame.winfo_x() + (event.x - self._drag_x)
        y = self.frame.winfo_y() + (event.y - self._drag_y)
        self.frame.geometry(f"+{x}+{y}")

class RetroOS:
    def __init__(self):
        self.root = tk.Tk()
        self.root.geometry("800x600")
        self.root.title("Retro OS 1.0")
        
        # 桌面背景
        self.desktop = tk.Canvas(self.root, bg="teal")
        self.desktop.pack(fill="both", expand=True)
        
        # 菜单栏
        self.menubar = tk.Menu(self.root)
        self.file_menu = tk.Menu(self.menubar, tearoff=0)
        self.file_menu.add_command(label="Calculator", command=self.open_calculator)
        self.file_menu.add_command(label="Notepad", command=self.open_notepad)
        self.menubar.add_cascade(label="Programs", menu=self.file_menu)
        self.root.config(menu=self.menubar)
        
        # 窗口列表
        self.windows = []
        
    def open_calculator(self):
        calc_win = Window(self.root, "Calculator")
        self.build_calculator(calc_win.content)
        self.windows.append(calc_win)
        
    def build_calculator(self, parent):
        buttons = [
            '7', '8', '9', '/',
            '4', '5', '6', '*',
            '1', '2', '3', '-',
            '0', '.', '=', '+'
        ]
        
        entry = tk.Entry(parent, width=20, font=("Arial", 14))
        entry.grid(row=0, column=0, columnspan=4)
        
        row, col = 1, 0
        for btn in buttons:
            ttk.Button(parent, text=btn, width=5, 
                      command=lambda x=btn: self.on_calc_click(x, entry)).grid(row=row, column=col)
            col += 1
            if col > 3:
                col = 0
                row += 1
                
    def on_calc_click(self, char, entry):
        if char == '=':
            try:
                result = eval(entry.get())
                entry.delete(0, tk.END)
                entry.insert(0, str(result))
            except:
                entry.delete(0, tk.END)
                entry.insert(0, "Error")
        else:
            entry.insert(tk.END, char)
            
    def open_notepad(self):
        note_win = Window(self.root, "Notepad")
        text = tk.Text(note_win.content, wrap="word")
        text.pack(fill="both", expand=True)
        self.windows.append(note_win)
        
    def run(self):
        self.root.mainloop()

if __name__ == "__main__":
    os = RetroOS()
    os.run()